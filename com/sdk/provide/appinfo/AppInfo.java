package com.sdk.provide.appinfo;

import java.text.NumberFormat;
import java.util.Arrays;
import java.util.Locale;
import org.json.JSONException;
import org.json.JSONObject;
import org.jsoup.Connection;
import org.jsoup.HttpStatusException;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

public class AppInfo
{
  private static final String gl = "&hl=en";
  private static String url = "https://play.google.com/store/apps/details?id=";
  
  public static AppDetails getAppDetails(String paramString)
    throws AppInfo.ParseException
  {
    try
    {
      AppDetails localAppDetails = new AppDetails(paramString);
      Document localDocument = Jsoup.connect("https://play.google.com/store/apps/details?id=" + paramString + "&hl=en").get();
      NumberFormat.getNumberInstance(Locale.US);
      Object localObject = localDocument.select("div.details-info");
      localDocument.select(".details-section-contents");
      ((Elements)localObject).select(".category");
      localAppDetails.url = "https://play.google.com/store/apps/details?id=com.intasave.quicksave";
      localAppDetails.title = localDocument.select("[class=AHFaub]").first().text().trim();
      localAppDetails.icon = localDocument.select("div.dQrBL").select("img").attr("abs:src");
      localAppDetails.developer = localDocument.select("span[class=T32cc UAO9ie]").first().text();
      localAppDetails.summary = localDocument.select("meta[name=\"description\"]").first().attr("content");
      int j = localDocument.select("[class=KDxLi]").select("[class=NIc6yf]").size();
      String[] arrayOfString = new String[j];
      localObject = "";
      int i = 0;
      while (i < j)
      {
        arrayOfString[i] = ((Element)localDocument.select("[class=KDxLi]").select("[class=NIc6yf]").get(i)).select("img").attr("abs:src");
        localObject = (String)localObject + arrayOfString[i] + "\n";
        i += 1;
      }
      localAppDetails.screenshots = arrayOfString;
      return localAppDetails;
    }
    catch (Exception localException)
    {
      if ((localException instanceof HttpStatusException)) {
        throw new ParseException("HTTP response was not OK. Are you sure " + paramString + " is on Google Play?");
      }
      throw new ParseException("Error parsing response for " + paramString, localException);
    }
  }
  
  public static class AppDetails
  {
    public String category;
    public boolean containsAds;
    public String contentRating;
    public String datePublished;
    public String description;
    public String developer;
    public String developerEmail;
    public String developerWebsite;
    public String downloads;
    public String fileSize;
    public String genre;
    public String icon;
    public int maxDownloads;
    public int minDownloads;
    public String minOsVersion;
    public boolean offersInAppPurchases;
    public final String packageName;
    public double price;
    public String rating;
    public int[] ratingHistogram;
    public String ratingNum;
    public String[] screenshots;
    public String summary;
    public String title;
    public String url;
    public String version;
    public String video;
    public String whatsNew;
    
    public AppDetails(String paramString)
    {
      this.packageName = paramString;
      this.url = "";
      this.title = "";
      this.icon = "";
      this.developer = "";
      this.developerEmail = "";
      this.developerWebsite = "";
      this.category = "";
      this.genre = "";
      this.summary = "";
      this.description = "";
      this.version = "";
      this.datePublished = "";
      this.minOsVersion = "";
      this.contentRating = "";
      this.fileSize = "";
      this.price = 0.0D;
      this.offersInAppPurchases = false;
      this.containsAds = false;
      this.minDownloads = 0;
      this.maxDownloads = 0;
      this.downloads = "";
      this.ratingHistogram = new int[5];
      this.ratingNum = "";
      this.rating = "";
      this.video = "";
      this.screenshots = new String[0];
      this.whatsNew = "";
    }
    
    public String toJson()
    {
      Object localObject = new JSONObject();
      try
      {
        ((JSONObject)localObject).put("packageName", this.packageName);
        ((JSONObject)localObject).put("url", this.url);
        ((JSONObject)localObject).put("title", this.title);
        ((JSONObject)localObject).put("icon", this.icon);
        ((JSONObject)localObject).put("developer", this.developer);
        ((JSONObject)localObject).put("developerEmail", this.developerEmail);
        ((JSONObject)localObject).put("developerWebsite", this.developerWebsite);
        ((JSONObject)localObject).put("category", this.category);
        ((JSONObject)localObject).put("genre", this.genre);
        ((JSONObject)localObject).put("summary", this.summary);
        ((JSONObject)localObject).put("description", this.description);
        ((JSONObject)localObject).put("version", this.version);
        ((JSONObject)localObject).put("datePublished", this.datePublished);
        ((JSONObject)localObject).put("minOsVersion", this.minOsVersion);
        ((JSONObject)localObject).put("contentRating", this.contentRating);
        ((JSONObject)localObject).put("fileSize", this.fileSize);
        ((JSONObject)localObject).put("price", this.price);
        ((JSONObject)localObject).put("offersInAppPurchases", this.offersInAppPurchases);
        ((JSONObject)localObject).put("containsAds", this.containsAds);
        ((JSONObject)localObject).put("minDownloads", this.minDownloads);
        ((JSONObject)localObject).put("maxDownloads", this.maxDownloads);
        ((JSONObject)localObject).put("downloads", this.downloads);
        ((JSONObject)localObject).put("ratingHistogram", this.ratingHistogram);
        ((JSONObject)localObject).put("ratingNum", this.ratingNum);
        ((JSONObject)localObject).put("rating", this.rating);
        ((JSONObject)localObject).put("video", this.video);
        ((JSONObject)localObject).put("whatsNew", this.whatsNew);
        if (this.screenshots.length >= 3)
        {
          ((JSONObject)localObject).put("countScreenShots", 3);
          i = 0;
          while (i < 3)
          {
            ((JSONObject)localObject).put("screenShot" + i, this.screenshots[i]);
            i += 1;
          }
        }
        ((JSONObject)localObject).put("countScreenShots", this.screenshots.length);
        int i = 0;
        while (i < this.screenshots.length)
        {
          ((JSONObject)localObject).put("screenShot" + i, this.screenshots[i]);
          i += 1;
        }
        localObject = ((JSONObject)localObject).toString();
        return (String)localObject;
      }
      catch (JSONException localJSONException)
      {
        localJSONException.printStackTrace();
      }
      return "";
    }
    
    public String toString()
    {
      return "{\n\"packageName\":\"" + this.packageName + '"' + ",\n\"url\":" + '"' + this.url + '"' + ",\n\"title\":" + '"' + this.title + '"' + ",\n\"icon\":" + '"' + this.icon + '"' + ",\n\"developer\":" + '"' + this.developer + '"' + ",\n\"developerEmail\":" + '"' + this.developerEmail + '"' + ",\n\"developerWebsite\":" + '"' + this.developerWebsite + '"' + ",\n\"category\":" + '"' + this.category + '"' + ",\n\"genre\":" + '"' + this.genre + '"' + ",\n\"summary\":" + '"' + this.summary + '"' + ",\n\"description\":" + '"' + this.description + '"' + ",\n\"version\":" + '"' + this.version + '"' + ",\n\"datePublished\":" + '"' + this.datePublished + '"' + ",\n\"minOsVersion\":" + '"' + this.minOsVersion + '"' + ",\n\"contentRating\":" + '"' + this.contentRating + '"' + ",\n\"fileSize\":" + '"' + this.fileSize + '"' + ",\n\"price\":" + '"' + this.price + '"' + ",\n\"offersInAppPurchases\":" + '"' + this.offersInAppPurchases + '"' + ",\n\"containsAds\":" + '"' + this.containsAds + '"' + ",\n\"minDownloads\":" + '"' + this.minDownloads + '"' + ",\n\"maxDownloads\":" + '"' + this.maxDownloads + '"' + ",\n\"Downloads\":" + '"' + this.downloads + '"' + ",\n\"ratingNum\":" + '"' + this.ratingNum + '"' + ",\n\"rating\":" + '"' + this.rating + '"' + ",\n\"video\":" + '"' + this.video + '"' + ",\n\"screenshots\":" + '"' + Arrays.toString(this.screenshots) + '"' + "," + '}';
    }
  }
  
  public static class ParseException
    extends Exception
  {
    public ParseException(String paramString)
    {
      super();
    }
    
    public ParseException(String paramString, Throwable paramThrowable)
    {
      super(paramThrowable);
    }
  }
}


/* Location:              /Users/paulpierre/Downloads/malware-unzip/poop.jar!/com/sdk/provide/appinfo/AppInfo.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       0.7.1
 */