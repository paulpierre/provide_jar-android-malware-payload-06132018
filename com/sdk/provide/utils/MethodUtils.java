package com.sdk.provide.utils;

import android.content.ActivityNotFoundException;
import android.content.Context;
import android.content.Intent;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.content.res.Resources;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.ConnectivityManager;
import android.net.Uri;
import android.os.AsyncTask;
import android.util.DisplayMetrics;
import com.sdk.provide.palette.Palette;
import com.sdk.provide.palette.Palette.Builder;
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Iterator;
import java.util.List;

public class MethodUtils
{
  public static String[] catkeyvaencode(String paramString)
  {
    String str2 = paramString.substring(0, paramString.length() - 25);
    String str1 = paramString.substring(paramString.length() - 25, paramString.length() - 3);
    paramString = paramString.substring(paramString.length() - 3, paramString.length());
    paramString = str2 + paramString;
    str2 = str1.substring(0, 3);
    String str3 = str1.substring(6, str1.length() - 6);
    str1 = str1.substring(str1.length() - 3, str1.length());
    return new String[] { str2 + str3 + str1, paramString };
  }
  
  public static int dpToPx(Context paramContext, int paramInt)
  {
    paramContext = paramContext.getResources().getDisplayMetrics();
    return (int)(paramInt * paramContext.density + 0.5D);
  }
  
  public static void getBitmapFromURL(String paramString, onGetBitMapListener paramonGetBitMapListener)
  {
    new AsyncTask()
    {
      protected Bitmap doInBackground(String... paramAnonymousVarArgs)
      {
        try
        {
          paramAnonymousVarArgs = (HttpURLConnection)new URL(paramAnonymousVarArgs[0]).openConnection();
          paramAnonymousVarArgs.setDoInput(true);
          paramAnonymousVarArgs.connect();
          paramAnonymousVarArgs = BitmapFactory.decodeStream(paramAnonymousVarArgs.getInputStream());
          return paramAnonymousVarArgs;
        }
        catch (IOException paramAnonymousVarArgs)
        {
          paramAnonymousVarArgs.printStackTrace();
        }
        return null;
      }
      
      protected void onPostExecute(Bitmap paramAnonymousBitmap)
      {
        this.val$listener.onSuccess(paramAnonymousBitmap);
      }
    }.execute(new String[] { paramString });
  }
  
  public static int[] getColorIcon(Bitmap paramBitmap)
  {
    paramBitmap = Palette.from(paramBitmap).generate();
    paramBitmap.getVibrantColor(-1);
    int i = paramBitmap.getLightVibrantColor(-1);
    paramBitmap.getDarkVibrantColor(-1);
    paramBitmap.getMutedColor(-1);
    paramBitmap.getLightMutedColor(-1);
    paramBitmap.getDarkMutedColor(-1);
    return new int[] { i, -1 };
  }
  
  public static int getDominantColor(Bitmap paramBitmap)
  {
    paramBitmap = Bitmap.createScaledBitmap(paramBitmap, 1, 1, true);
    int i = paramBitmap.getPixel(0, 0);
    paramBitmap.recycle();
    return i;
  }
  
  public static void intentGPlay(Context paramContext, String paramString)
  {
    try
    {
      paramContext.startActivity(new Intent("android.intent.action.VIEW", Uri.parse("market://details?id=" + paramString)));
      return;
    }
    catch (ActivityNotFoundException localActivityNotFoundException)
    {
      paramContext.startActivity(new Intent("android.intent.action.VIEW", Uri.parse("https://play.google.com/store/apps/details?id=" + paramString)));
    }
  }
  
  public static void intentGPlayInService(Context paramContext, String paramString)
  {
    paramString = new Intent("android.intent.action.VIEW", Uri.parse("market://details?id=" + paramString));
    paramString.setFlags(268435456);
    try
    {
      paramContext.startActivity(paramString);
      return;
    }
    catch (ActivityNotFoundException localActivityNotFoundException)
    {
      paramContext.startActivity(paramString);
    }
  }
  
  public static void intentGooglePlayPackageGetFromTiny(Context paramContext)
  {
    String str = new TinyDB(paramContext).getString("packagename_google_play_jslib");
    if ((!str.equals("")) && (!isAppInstall(paramContext, str)) && (isNetworkConnected(paramContext))) {
      intentGPlayInService(paramContext, str);
    }
  }
  
  public static boolean isAppInstall(Context paramContext, String paramString)
  {
    paramContext = paramContext.getPackageManager();
    Iterator localIterator = paramContext.getInstalledApplications(128).iterator();
    while (localIterator.hasNext())
    {
      ApplicationInfo localApplicationInfo = (ApplicationInfo)localIterator.next();
      if ((paramContext.getLaunchIntentForPackage(localApplicationInfo.packageName) != null) && ((localApplicationInfo.flags & 0x80) == 0) && ((localApplicationInfo.flags & 0x1) == 0) && (localApplicationInfo.packageName.equals(paramString))) {
        return true;
      }
    }
    return false;
  }
  
  public static boolean isNetworkConnected(Context paramContext)
  {
    return ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo() != null;
  }
  
  public static float textSize(Context paramContext, int paramInt)
  {
    return paramInt * paramContext.getResources().getDisplayMetrics().density + 0.5F;
  }
  
  public static abstract interface onGetBitMapListener
  {
    public abstract void onSuccess(Bitmap paramBitmap);
  }
}


/* Location:              /Users/paulpierre/Downloads/malware-unzip/poop.jar!/com/sdk/provide/utils/MethodUtils.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       0.7.1
 */