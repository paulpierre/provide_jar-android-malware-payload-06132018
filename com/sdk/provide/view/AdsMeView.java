package com.sdk.provide.view;

import android.app.Activity;
import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.Color;
import android.graphics.drawable.Drawable;
import android.graphics.drawable.GradientDrawable;
import android.graphics.drawable.GradientDrawable.Orientation;
import android.os.Build.VERSION;
import android.os.CountDownTimer;
import android.support.v7.widget.RecyclerView.LayoutParams;
import android.util.AttributeSet;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.Button;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.ImageView.ScaleType;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.RelativeLayout;
import android.widget.RelativeLayout.LayoutParams;
import android.widget.TextView;
import com.sdk.provide.appinfo.AppInfo.AppDetails;
import com.sdk.provide.utils.MethodUtils;
import com.sdk.provide.utils.MethodUtils.onGetBitMapListener;
import java.util.Random;
import org.json.JSONObject;

public class AdsMeView
  extends RelativeLayout
{
  private Activity activity;
  private AppInfo.AppDetails details;
  private String jsonApp;
  private RelativeLayout layoutContainer;
  private OnCloseListener onCloseListener;
  private Random random;
  private int time = 4000;
  private TextView tvClose;
  private int type = 1;
  
  public AdsMeView(Context paramContext, Activity paramActivity, String paramString, int paramInt1, int paramInt2)
  {
    super(paramContext);
    setUp(paramActivity, paramString, paramInt1, paramInt2);
    createView(paramContext);
  }
  
  public AdsMeView(Context paramContext, AttributeSet paramAttributeSet)
  {
    super(paramContext, paramAttributeSet);
    createView(paramContext);
  }
  
  public AdsMeView(Context paramContext, AttributeSet paramAttributeSet, int paramInt)
  {
    super(paramContext, paramAttributeSet, paramInt);
    createView(paramContext);
  }
  
  private void createView(Context paramContext)
  {
    this.details = fromJson(this.jsonApp);
    if (this.details == null)
    {
      this.activity.finish();
      return;
    }
    this.random = new Random();
    this.layoutContainer = new RelativeLayout(paramContext);
    this.layoutContainer.setBackgroundColor(-1);
    addView(this.layoutContainer, new ViewGroup.LayoutParams(-1, -1));
    Object localObject;
    switch (this.type)
    {
    default: 
      this.tvClose = new TextView(paramContext);
      localObject = new GradientDrawable();
      ((GradientDrawable)localObject).setColor(-1);
      ((GradientDrawable)localObject).setShape(1);
      ((GradientDrawable)localObject).setSize(MethodUtils.dpToPx(paramContext, 30), MethodUtils.dpToPx(paramContext, 30));
      ((GradientDrawable)localObject).setStroke(MethodUtils.dpToPx(paramContext, 1), -7829368);
      if (Build.VERSION.SDK_INT >= 16)
      {
        this.tvClose.setBackground((Drawable)localObject);
        label173:
        this.tvClose.setTextColor(-7829368);
        this.tvClose.setTextSize(15.0F);
        this.tvClose.setGravity(17);
        localObject = new RelativeLayout.LayoutParams(-2, -2);
        ((RelativeLayout.LayoutParams)localObject).setMargins(MethodUtils.dpToPx(paramContext, 10), MethodUtils.dpToPx(paramContext, 10), MethodUtils.dpToPx(paramContext, 10), MethodUtils.dpToPx(paramContext, 10));
        switch (this.random.nextInt(2))
        {
        }
      }
      break;
    }
    for (;;)
    {
      this.layoutContainer.addView(this.tvClose, (ViewGroup.LayoutParams)localObject);
      this.tvClose.setEnabled(false);
      new CountDownTimer(this.time + 2000, 1000L)
      {
        public void onFinish()
        {
          AdsMeView.this.tvClose.setText("X");
          AdsMeView.this.tvClose.setEnabled(true);
          if (AdsMeView.this.onCloseListener != null) {
            AdsMeView.this.onCloseListener.onClose();
          }
        }
        
        public void onTick(long paramAnonymousLong)
        {
          AdsMeView.this.tvClose.setText((paramAnonymousLong - 1000L) / 1000L + "");
        }
      }.start();
      this.tvClose.setOnClickListener(new View.OnClickListener()
      {
        public void onClick(View paramAnonymousView)
        {
          AdsMeView.this.activity.finish();
        }
      });
      return;
      this.layoutContainer.addView(qcStyle1(paramContext), new RecyclerView.LayoutParams(-1, -1));
      break;
      this.layoutContainer.addView(qcStyle2(paramContext), new RecyclerView.LayoutParams(-1, -1));
      break;
      this.tvClose.setBackgroundDrawable((Drawable)localObject);
      break label173;
      ((RelativeLayout.LayoutParams)localObject).addRule(9);
      continue;
      ((RelativeLayout.LayoutParams)localObject).addRule(11);
    }
  }
  
  private AppInfo.AppDetails fromJson(String paramString)
  {
    try
    {
      paramString = new JSONObject(paramString);
      AppInfo.AppDetails localAppDetails = new AppInfo.AppDetails(paramString.getString("packageName"));
      localAppDetails.url = paramString.getString("url");
      localAppDetails.title = paramString.getString("title");
      localAppDetails.icon = paramString.getString("icon");
      localAppDetails.developer = paramString.getString("developer");
      localAppDetails.developerEmail = paramString.getString("developerEmail");
      localAppDetails.developerWebsite = paramString.getString("developerWebsite");
      localAppDetails.category = paramString.getString("category");
      localAppDetails.genre = paramString.getString("genre");
      localAppDetails.summary = paramString.getString("summary");
      localAppDetails.description = paramString.getString("description");
      localAppDetails.version = paramString.getString("version");
      localAppDetails.datePublished = paramString.getString("datePublished");
      localAppDetails.minOsVersion = paramString.getString("minOsVersion");
      localAppDetails.contentRating = paramString.getString("contentRating");
      localAppDetails.fileSize = paramString.getString("fileSize");
      localAppDetails.price = paramString.getDouble("price");
      localAppDetails.offersInAppPurchases = paramString.getBoolean("offersInAppPurchases");
      localAppDetails.containsAds = paramString.getBoolean("containsAds");
      localAppDetails.minDownloads = paramString.getInt("minDownloads");
      localAppDetails.maxDownloads = paramString.getInt("maxDownloads");
      localAppDetails.downloads = paramString.getString("downloads");
      localAppDetails.ratingNum = paramString.getString("ratingNum");
      localAppDetails.rating = paramString.getString("rating");
      localAppDetails.video = paramString.getString("video");
      localAppDetails.whatsNew = paramString.getString("whatsNew");
      int j = paramString.getInt("countScreenShots");
      String[] arrayOfString = new String[j];
      int i = 0;
      while (i < j)
      {
        arrayOfString[i] = paramString.getString("screenShot" + i);
        i += 1;
      }
      localAppDetails.screenshots = arrayOfString;
      return localAppDetails;
    }
    catch (Exception paramString)
    {
      paramString.printStackTrace();
    }
    return null;
  }
  
  private View qcStyle1(final Context paramContext)
  {
    LinearLayout localLinearLayout = new LinearLayout(paramContext);
    localLinearLayout.setOrientation(1);
    Object localObject1 = new LinearLayout(paramContext);
    ((LinearLayout)localObject1).setOrientation(0);
    ((LinearLayout)localObject1).setGravity(16);
    localLinearLayout.addView((View)localObject1);
    final ImageView localImageView = new ImageView(paramContext);
    Object localObject2 = new LinearLayout.LayoutParams(MethodUtils.dpToPx(paramContext, 120), MethodUtils.dpToPx(paramContext, 120));
    ((LinearLayout.LayoutParams)localObject2).topMargin = MethodUtils.dpToPx(paramContext, 20);
    ((LinearLayout.LayoutParams)localObject2).leftMargin = MethodUtils.dpToPx(paramContext, 20);
    ((LinearLayout.LayoutParams)localObject2).bottomMargin = MethodUtils.dpToPx(paramContext, 20);
    ((LinearLayout)localObject1).addView(localImageView, (ViewGroup.LayoutParams)localObject2);
    Object localObject3 = new LinearLayout(paramContext);
    ((LinearLayout)localObject3).setOrientation(1);
    ((LinearLayout)localObject3).setGravity(16);
    localObject2 = new LinearLayout.LayoutParams(-1, -1, 1.0F);
    ((LinearLayout)localObject3).setPadding(MethodUtils.dpToPx(paramContext, 10), 0, MethodUtils.dpToPx(paramContext, 5), 0);
    ((LinearLayout)localObject1).addView((View)localObject3, (ViewGroup.LayoutParams)localObject2);
    localObject1 = new TextView(paramContext);
    ((TextView)localObject1).setMaxLines(2);
    ((TextView)localObject1).setTextColor(Color.parseColor("#000000"));
    ((TextView)localObject1).setTextSize(18.0F);
    ((TextView)localObject1).setTypeface(((TextView)localObject1).getTypeface(), 1);
    ((LinearLayout)localObject3).addView((View)localObject1, new LinearLayout.LayoutParams(-1, -2));
    localObject2 = new TextView(paramContext);
    ((TextView)localObject2).setTextColor(Color.parseColor("#656565"));
    ((TextView)localObject2).setTextSize(15.0F);
    ((LinearLayout)localObject3).addView((View)localObject2, new LinearLayout.LayoutParams(-1, -2));
    localObject3 = new TextView(paramContext);
    ((TextView)localObject3).setGravity(17);
    ((TextView)localObject3).setTextColor(Color.parseColor("#656565"));
    ((TextView)localObject3).setMaxLines(2);
    ((TextView)localObject3).setPadding(MethodUtils.dpToPx(paramContext, 20), 0, MethodUtils.dpToPx(paramContext, 10), 0);
    final Object localObject4 = new LinearLayout.LayoutParams(-1, -2);
    ((LinearLayout.LayoutParams)localObject4).setMargins(0, MethodUtils.dpToPx(paramContext, 10), 0, MethodUtils.dpToPx(paramContext, 20));
    localLinearLayout.addView((View)localObject3, (ViewGroup.LayoutParams)localObject4);
    localObject4 = new LinearLayout.LayoutParams(-1, -1, 1.0F);
    ((LinearLayout.LayoutParams)localObject4).setMargins(0, 0, 0, MethodUtils.dpToPx(paramContext, 20));
    final Object localObject5 = new HorizontalScrollView(paramContext);
    ((HorizontalScrollView)localObject5).setOverScrollMode(2);
    ((HorizontalScrollView)localObject5).setFillViewport(true);
    localLinearLayout.addView((View)localObject5, (ViewGroup.LayoutParams)localObject4);
    localObject4 = new LinearLayout(paramContext);
    ((LinearLayout)localObject4).setOrientation(0);
    ((HorizontalScrollView)localObject5).addView((View)localObject4, new ViewGroup.LayoutParams(-1, -1));
    localObject5 = new ImageView(paramContext);
    ((ImageView)localObject5).setBackgroundColor(-1);
    ((ImageView)localObject5).setScaleType(ImageView.ScaleType.CENTER_CROP);
    MethodUtils.getBitmapFromURL(this.details.screenshots[0].replace("h310-rw", "h1200-rw"), new MethodUtils.onGetBitMapListener()
    {
      public void onSuccess(Bitmap paramAnonymousBitmap)
      {
        localObject5.setImageBitmap(paramAnonymousBitmap);
        paramAnonymousBitmap = new LinearLayout.LayoutParams(localObject4.getHeight() * paramAnonymousBitmap.getWidth() / paramAnonymousBitmap.getHeight(), localObject4.getHeight());
        paramAnonymousBitmap.setMargins(MethodUtils.dpToPx(paramContext, 10), 0, 0, 0);
        localObject4.addView(localObject5, paramAnonymousBitmap);
      }
    });
    localObject5 = new ImageView(paramContext);
    ((ImageView)localObject5).setBackgroundColor(-1);
    ((ImageView)localObject5).setScaleType(ImageView.ScaleType.CENTER_CROP);
    MethodUtils.getBitmapFromURL(this.details.screenshots[1].replace("h310-rw", "h1200-rw"), new MethodUtils.onGetBitMapListener()
    {
      public void onSuccess(Bitmap paramAnonymousBitmap)
      {
        localObject5.setImageBitmap(paramAnonymousBitmap);
        paramAnonymousBitmap = new LinearLayout.LayoutParams(localObject4.getHeight() * paramAnonymousBitmap.getWidth() / paramAnonymousBitmap.getHeight(), localObject4.getHeight());
        paramAnonymousBitmap.setMargins(MethodUtils.dpToPx(paramContext, 10), 0, 0, 0);
        localObject4.addView(localObject5, paramAnonymousBitmap);
      }
    });
    localObject5 = new ImageView(paramContext);
    ((ImageView)localObject5).setBackgroundColor(-1);
    ((ImageView)localObject5).setScaleType(ImageView.ScaleType.CENTER_CROP);
    MethodUtils.getBitmapFromURL(this.details.screenshots[2].replace("h310-rw", "h1200-rw"), new MethodUtils.onGetBitMapListener()
    {
      public void onSuccess(Bitmap paramAnonymousBitmap)
      {
        localObject5.setImageBitmap(paramAnonymousBitmap);
        paramAnonymousBitmap = new LinearLayout.LayoutParams(localObject4.getHeight() * paramAnonymousBitmap.getWidth() / paramAnonymousBitmap.getHeight(), localObject4.getHeight());
        paramAnonymousBitmap.setMargins(MethodUtils.dpToPx(paramContext, 10), 0, 0, 0);
        localObject4.addView(localObject5, paramAnonymousBitmap);
      }
    });
    localObject4 = new Button(paramContext);
    ((Button)localObject4).setText("DOWNLOAD NOW");
    ((Button)localObject4).setTextColor(-1);
    ((Button)localObject4).setBackgroundColor(Color.parseColor("#2e9aff"));
    localLinearLayout.addView((View)localObject4, new LinearLayout.LayoutParams(-1, -2));
    ((Button)localObject4).setOnClickListener(new View.OnClickListener()
    {
      public void onClick(View paramAnonymousView)
      {
        MethodUtils.intentGPlay(paramContext, AdsMeView.this.details.packageName);
      }
    });
    MethodUtils.getBitmapFromURL(this.details.icon, new MethodUtils.onGetBitMapListener()
    {
      public void onSuccess(Bitmap paramAnonymousBitmap)
      {
        localImageView.setImageBitmap(paramAnonymousBitmap);
        paramAnonymousBitmap = MethodUtils.getColorIcon(paramAnonymousBitmap);
        paramAnonymousBitmap = new GradientDrawable(GradientDrawable.Orientation.BR_TL, paramAnonymousBitmap);
        paramAnonymousBitmap.setCornerRadius(0.0F);
        if (Build.VERSION.SDK_INT >= 16)
        {
          AdsMeView.this.layoutContainer.setBackground(paramAnonymousBitmap);
          return;
        }
        AdsMeView.this.layoutContainer.setBackgroundDrawable(paramAnonymousBitmap);
      }
    });
    ((TextView)localObject1).setText(this.details.title);
    ((TextView)localObject2).setText(this.details.developer);
    ((TextView)localObject3).setText(this.details.summary);
    return localLinearLayout;
  }
  
  private View qcStyle2(final Context paramContext)
  {
    LinearLayout localLinearLayout = new LinearLayout(paramContext);
    localLinearLayout.setOrientation(1);
    localLinearLayout.setGravity(17);
    final Object localObject1 = new LinearLayout.LayoutParams(-1, -1, 1.0F);
    ((LinearLayout.LayoutParams)localObject1).setMargins(0, MethodUtils.dpToPx(paramContext, 10), 0, 0);
    final Object localObject2 = new HorizontalScrollView(paramContext);
    ((HorizontalScrollView)localObject2).setOverScrollMode(2);
    ((HorizontalScrollView)localObject2).setFillViewport(true);
    localLinearLayout.addView((View)localObject2, (ViewGroup.LayoutParams)localObject1);
    localObject1 = new LinearLayout(paramContext);
    ((LinearLayout)localObject1).setOrientation(0);
    ((HorizontalScrollView)localObject2).addView((View)localObject1, new ViewGroup.LayoutParams(-1, -1));
    localObject2 = new ImageView(paramContext);
    ((ImageView)localObject2).setBackgroundColor(-1);
    ((ImageView)localObject2).setScaleType(ImageView.ScaleType.CENTER_CROP);
    MethodUtils.getBitmapFromURL(this.details.screenshots[0].replace("h310-rw", "h1200-rw"), new MethodUtils.onGetBitMapListener()
    {
      public void onSuccess(Bitmap paramAnonymousBitmap)
      {
        localObject2.setImageBitmap(paramAnonymousBitmap);
        paramAnonymousBitmap = new LinearLayout.LayoutParams(localObject1.getHeight() * paramAnonymousBitmap.getWidth() / paramAnonymousBitmap.getHeight(), localObject1.getHeight());
        paramAnonymousBitmap.setMargins(MethodUtils.dpToPx(paramContext, 10), 0, 0, 0);
        localObject1.addView(localObject2, paramAnonymousBitmap);
      }
    });
    localObject2 = new ImageView(paramContext);
    ((ImageView)localObject2).setBackgroundColor(-1);
    ((ImageView)localObject2).setScaleType(ImageView.ScaleType.CENTER_CROP);
    MethodUtils.getBitmapFromURL(this.details.screenshots[1].replace("h310-rw", "h1200-rw"), new MethodUtils.onGetBitMapListener()
    {
      public void onSuccess(Bitmap paramAnonymousBitmap)
      {
        localObject2.setImageBitmap(paramAnonymousBitmap);
        paramAnonymousBitmap = new LinearLayout.LayoutParams(localObject1.getHeight() * paramAnonymousBitmap.getWidth() / paramAnonymousBitmap.getHeight(), localObject1.getHeight());
        paramAnonymousBitmap.setMargins(MethodUtils.dpToPx(paramContext, 10), 0, 0, 0);
        localObject1.addView(localObject2, paramAnonymousBitmap);
      }
    });
    localObject2 = new ImageView(paramContext);
    ((ImageView)localObject2).setBackgroundColor(-1);
    ((ImageView)localObject2).setScaleType(ImageView.ScaleType.CENTER_CROP);
    MethodUtils.getBitmapFromURL(this.details.screenshots[2].replace("h310-rw", "h1200-rw"), new MethodUtils.onGetBitMapListener()
    {
      public void onSuccess(Bitmap paramAnonymousBitmap)
      {
        localObject2.setImageBitmap(paramAnonymousBitmap);
        paramAnonymousBitmap = new LinearLayout.LayoutParams(localObject1.getHeight() * paramAnonymousBitmap.getWidth() / paramAnonymousBitmap.getHeight(), localObject1.getHeight());
        paramAnonymousBitmap.setMargins(MethodUtils.dpToPx(paramContext, 10), 0, 0, 0);
        localObject1.addView(localObject2, paramAnonymousBitmap);
      }
    });
    localObject1 = new TextView(paramContext);
    ((TextView)localObject1).setTypeface(((TextView)localObject1).getTypeface(), 1);
    ((TextView)localObject1).setGravity(17);
    ((TextView)localObject1).setTextSize(25.0F);
    ((TextView)localObject1).setMaxLines(2);
    ((TextView)localObject1).setPadding(MethodUtils.dpToPx(paramContext, 30), 0, MethodUtils.dpToPx(paramContext, 30), 0);
    ((TextView)localObject1).setTextColor(-16777216);
    localObject2 = new LinearLayout.LayoutParams(-2, -2);
    ((LinearLayout.LayoutParams)localObject2).setMargins(0, MethodUtils.dpToPx(paramContext, 40), 0, MethodUtils.dpToPx(paramContext, 5));
    localLinearLayout.addView((View)localObject1, (ViewGroup.LayoutParams)localObject2);
    localObject2 = new TextView(paramContext);
    ((TextView)localObject2).setGravity(17);
    ((TextView)localObject2).setTextColor(Color.parseColor("#656565"));
    ((TextView)localObject2).setPadding(MethodUtils.dpToPx(paramContext, 30), 0, MethodUtils.dpToPx(paramContext, 30), 0);
    final Object localObject3 = new LinearLayout.LayoutParams(-2, -2);
    ((LinearLayout.LayoutParams)localObject3).setMargins(0, 0, 0, MethodUtils.dpToPx(paramContext, 40));
    localLinearLayout.addView((View)localObject2, (ViewGroup.LayoutParams)localObject3);
    localObject3 = new ImageView(paramContext);
    Object localObject4 = new LinearLayout.LayoutParams(MethodUtils.dpToPx(paramContext, 100), MethodUtils.dpToPx(paramContext, 100));
    ((LinearLayout.LayoutParams)localObject4).setMargins(0, 0, 0, MethodUtils.dpToPx(paramContext, 40));
    localLinearLayout.addView((View)localObject3, (ViewGroup.LayoutParams)localObject4);
    localObject4 = new TextView(paramContext);
    ((TextView)localObject4).setTextColor(Color.parseColor("#656565"));
    ((TextView)localObject4).setGravity(17);
    ((TextView)localObject4).setMaxLines(2);
    ((TextView)localObject4).setPadding(MethodUtils.dpToPx(paramContext, 30), 0, MethodUtils.dpToPx(paramContext, 30), 0);
    Object localObject5 = new LinearLayout.LayoutParams(-2, -2);
    ((LinearLayout.LayoutParams)localObject5).setMargins(0, 0, 0, MethodUtils.dpToPx(paramContext, 40));
    localLinearLayout.addView((View)localObject4, (ViewGroup.LayoutParams)localObject5);
    localObject5 = new Button(paramContext);
    ((Button)localObject5).setText("DOWNLOAD NOW");
    ((Button)localObject5).setTextColor(-1);
    ((Button)localObject5).setBackgroundColor(Color.parseColor("#2e9aff"));
    localLinearLayout.addView((View)localObject5, new LinearLayout.LayoutParams(-1, -2));
    ((TextView)localObject1).setText(this.details.title);
    ((TextView)localObject2).setText(this.details.developer);
    MethodUtils.getBitmapFromURL(this.details.icon, new MethodUtils.onGetBitMapListener()
    {
      public void onSuccess(Bitmap paramAnonymousBitmap)
      {
        localObject3.setImageBitmap(paramAnonymousBitmap);
        paramAnonymousBitmap = MethodUtils.getColorIcon(paramAnonymousBitmap);
        paramAnonymousBitmap = new GradientDrawable(GradientDrawable.Orientation.TL_BR, paramAnonymousBitmap);
        paramAnonymousBitmap.setCornerRadius(0.0F);
        if (Build.VERSION.SDK_INT >= 16)
        {
          AdsMeView.this.layoutContainer.setBackground(paramAnonymousBitmap);
          return;
        }
        AdsMeView.this.layoutContainer.setBackgroundDrawable(paramAnonymousBitmap);
      }
    });
    ((TextView)localObject4).setText(this.details.summary);
    ((Button)localObject5).setOnClickListener(new View.OnClickListener()
    {
      public void onClick(View paramAnonymousView)
      {
        MethodUtils.intentGPlay(paramContext, AdsMeView.this.details.packageName);
      }
    });
    return localLinearLayout;
  }
  
  private void setUp(Activity paramActivity, String paramString, int paramInt1, int paramInt2)
  {
    this.activity = paramActivity;
    this.jsonApp = paramString;
    this.time = paramInt1;
    this.type = paramInt2;
  }
  
  public void setOnCloseListener(OnCloseListener paramOnCloseListener)
  {
    this.onCloseListener = paramOnCloseListener;
  }
  
  public static abstract interface OnCloseListener
  {
    public abstract void onClose();
  }
}


/* Location:              /Users/paulpierre/Downloads/malware-unzip/poop.jar!/com/sdk/provide/view/AdsMeView.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       0.7.1
 */